name: CI

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:

  build-on-macos:
    runs-on: macos-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: reinstall curl
        run: |
          brew reinstall curl
      - name: build and test
        uses: leanprover/lean-action@v1
        with:
            use-mathlib-cache: false
            use-github-cache: false
      - name: run example with path to libcurl
        run: |
          export LIBCURL=$(lake update | grep 'path to libcurl' | awk '{ print $4 }')
          echo "LIBCURL $LIBCURL"
          cd examples/httpget
          lake -R -KlibCurl=$LIBCURL build
          .lake/build/bin/httpget

  build-on-ubuntu:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: build and test
        uses: leanprover/lean-action@v1
        with:
            use-mathlib-cache: false
            use-github-cache: false
      - name: run example with path to libcurl
        run: |
          export LIBCURL=$(lake update | grep 'path to libcurl' | awk '{ print $4 }')
          echo "LIBCURL $LIBCURL"
          cd examples/httpget
          lake -R -KlibCurl=$LIBCURL build
          .lake/build/bin/httpget
